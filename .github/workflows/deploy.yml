name: 🚀 Deploy to Environment

on:
  push:
    branches:
      - dev
      - staging
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ Checkout Code
        uses: actions/checkout@v3

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: 🔄 Determine Environment
        id: env
        run: |
          if [[ "${{ github.ref_name }}" == "main" ]]; then
            echo "env=production" >> $GITHUB_ENV
          elif [[ "${{ github.ref_name }}" == "staging" ]]; then
            echo "env=staging" >> $GITHUB_ENV
          else
            echo "env=development" >> $GITHUB_ENV
          fi

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: 📦 Cache Node.js dependencies
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            .npm
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: 📦 Install Backend Dependencies
        run: npm install
        working-directory: ./server

      - name: 📦 Install Frontend Dependencies
        run: npm install
        working-directory: ./frontend

      - name: 💠 Build Frontend
        run: npm run build
        working-directory: ./frontend
        env:
          NODE_ENV: ${{ env.env }}

      - name: 🥪 Print Environment Info
        run: |
          echo "✅ Branch: ${{ github.ref_name }}"
          echo "🌍 Environment: $NODE_ENV"
          echo "🔗 Database URL: $DB_URL"
          echo "🌐 API URL (Frontend): $VITE_API_URL"
        env:
          DB_URL: ${{ secrets.DB_URL }}
          VITE_API_URL: ${{ secrets.VITE_API_URL }}
          NODE_ENV: ${{ secrets.NODE_ENV }}

      - name: 🚀 Deploy to ${{ env.env }} environment
        run: |
          echo "Deploying to ${{ env.env }} environment..."
          # Add your base deployment logic here (optional)
        env:
          DB_URL: ${{ secrets.DB_URL }}
          VITE_API_URL: ${{ secrets.VITE_API_URL }}
          NODE_ENV: ${{ secrets.NODE_ENV }}

  deploy-green:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: 🐳 Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: 🐳 Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: 🐳 Run Docker Compose
        run: docker-compose -f docker-compose.green.yml up -d --build

      - name: Wait for App to be Ready
        run: sleep 15

      - name: Run Integration/E2E Tests on Green
        run: |
          echo "Run integration/E2E tests"
          curl -f http://localhost:8082 || exit 1

  switch-traffic:
    runs-on: ubuntu-latest
    needs: deploy-green
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Switch Proxy to Green
        run: |
          echo "Switching proxy to green environment"
          sed -i 's/blue-frontend/green-frontend/g' docker-compose.proxy.yml
          sed -i 's/blue-app/green-app/g' docker-compose.proxy.yml
          docker-compose -f docker-compose.proxy.yml up -d --build
